HASHID

‚ùØ hashid -h
usage: hashid.py [-h] [-e] [-m] [-j] [-o FILE] [--version] INPUT

Identify the different types of hashes used to encrypt data

positional arguments:
  INPUT                    input to analyze (default: STDIN)

options:
  -e, --extended           list all possible hash algorithms including salted passwords
  -m, --mode               show corresponding Hashcat mode in output
  -j, --john               show corresponding JohnTheRipper format in output
  -o FILE, --outfile FILE  write output to file
  -h, --help               show this help message and exit
  --version                show program's version number and exit

License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

example : hashid -m file.hash
-------------------------------------------------------------------------------------------
HASHCAT 

hashcat -a attack_mode -m hash_number fichier.hash /path/to/wordlists
hashcat -a attack_mode -m hash_number fichier.hash /path/to/wordlists --show
hashcat -a attack_mode -m hash_number fichier.hash /path/to/wordlists -o hash.cracked

--------------------------------------------------------------------------------------------
JOHN

git clone "https://github.com/magnumripper/JohnTheRipper.git" && cd JohnTheRipper/src && ./configure && sudo make -s clean && sudo make -sj4 

john --wordlist=path/to/wordlist file.hash
/john/run/zip2john test.zip > zip.hash
/john/run/keepass2john cyber.kdbx > cyber.hash
/john/run/unshadow passwd.bak shadow.bak > unshadowed.hashes

---------------------------------------------------------------------------------------------
USEFUL COMMANDS

python3 jwtcrack.py [JWT or JWT filename] [dictionary filename]
python3 verify_jwt_signature.py [SECRET] [JWT]
